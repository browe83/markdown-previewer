{"version":3,"sources":["components/Editor.js","components/Previewer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","editorNormal","marginTop","marginBottom","boxShadow","width","editorExpanded","height","editorAvatar","color","header","backgroundColor","close","overflow","resize","minHeight","open","icon","transform","Editor","props","classes","useState","expanded","setExpanded","Card","variant","className","CardHeader","avatar","Avatar","action","IconButton","onClick","title","TextareaAutosize","id","placeholder","onChange","e","updateText","target","value","rowsMax","text","previewer","display","flexDirection","flex","prevAvatar","content","overflowY","Previewer","toggleShow","show","CardContent","Typography","parse","marked","setOptions","gfm","breaks","container","alignItems","App","setText","setShow","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b06605e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { TextareaAutosize, CardHeader, Card, Avatar, IconButton } from '@material-ui/core';\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  editorNormal: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    boxShadow: '5px 5px 5px',\n    width: '80%',\n  },\n  editorExpanded: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    boxShadow: '5px 5px 5px',\n    width: '100%',\n    height: '100vh',\n  },\n  editorAvatar: {\n    color: 'black'\n  },\n  header: {\n    backgroundColor: '#87ceeb',\n  },\n  close: {\n    width: '100%',\n    overflow: 'scroll !important',\n    backgroundColor: '#f9f9f9',\n    resize: 'vertical',\n    minHeight: '150px'\n  },\n  open: {\n    width: '100%',\n    overflow: 'scroll',\n    backgroundColor: '#f9f9f9',\n    height: '100% !important',\n    resize: 'vertical',\n  },\n  icon: {\n    transform: 'rotate(45deg)',\n  }\n});\n\nexport default function Editor(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleExpanded = () => {\n    const currentState = expanded;\n    setExpanded(!currentState);\n  }\n\n  return (\n      <Card variant='outlined' className={ expanded ? classes.editorExpanded : classes.editorNormal}>\n        <CardHeader\n          className={classes.header} \n          avatar={\n            <Avatar className={classes.editorAvatar}>E</Avatar>\n          }\n          action={\n            <IconButton onClick={toggleExpanded}>\n              {expanded \n                ? <CloseIcon/>\n                : <OpenWithIcon className={classes.icon}/> \n              }\n            </IconButton>\n          }\n          title=\"EDITOR\"\n        />\n        <TextareaAutosize \n          id=\"editor\" \n          className={ expanded ? classes.open : classes.close}\n          placeholder=\"Markdown Editor...\" \n          onChange={(e) => props.updateText(e.target.value)}\n          rowsMax={12}\n          value={props.text}\n        >\n        </TextareaAutosize>\n     </Card>\n  )\n}","import { CardHeader, Card, Avatar, IconButton, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\nimport marked from 'marked';\nimport parse from 'html-react-parser';\n\nconst useStyles = makeStyles({\n  previewer: {\n    display: 'flex',\n    flexDirection: 'column',\n    boxShadow: '5px 5px 5px', \n    width: '100%',\n    marginTop: '10px',\n    flex: '1',\n    marginBottom: '10px',\n    backgroundColor: '#f9f9f9',\n  },\n  prevAvatar: {\n    color: 'black',\n  },\n  header: {\n    display: 'fixed',\n    backgroundColor: '#87ceeb',\n  },\n  icon: {\n    transform: 'rotate(45deg)',\n  },\n  content: {\n    overflowY: 'scroll',\n  }\n})\n\nmarked.setOptions({\n  gfm: true,\n  breaks: true,\n})\n\nexport default function Previewer(props) {\n  const classes = useStyles();\n  \n  return (\n    <Card variant='outlined' className={classes.previewer}>\n      <CardHeader \n        className={classes.header} \n        avatar={\n          <Avatar className={classes.prevAvatar}>P</Avatar>\n        }\n        action={\n          <IconButton onClick={props.toggleShow}>\n            {props.show \n              ? <OpenWithIcon className={classes.icon}/> \n              : <CloseIcon />\n            }\n          </IconButton>\n        }\n        title=\"PREVIEWER\"\n      />\n      <CardContent className={classes.content}>\n          <Typography id=\"preview\" >\n            {parse(marked(props.text))}\n          </Typography>\n      </CardContent>\n    </Card>\n  )\n}","import './App.css';\nimport Editor from './components/Editor.js';\nimport Previewer from './components/Previewer.js';\nimport { Container } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    height: '100vh',\n    flexDirection: 'column', \n    alignItems: 'center',\n  }\n});\n\nconst initialText = '# h1\\r## h2\\n[GitHub](http://github.com)\\n\\n`const name = \"Brandon\"`\\n\\n```\\nconst foo = \"bar\"\\nconsole.log(foo) // output: bar\\n\\n```\\n**bold**\\n\\n> Block Quotes!\\n\\n![cat image](https://placekitten.com/g/200/300)\\n\\n- list item\\n- list item\\n- list item'\n\nfunction App() {\n  const [text, setText] = useState(initialText);\n  const [show, setShow] = useState(true);\n  const classes = useStyles();\n\n  const toggleShow = () => {\n    const currentState = show;\n    setShow(!currentState);\n  }\n\n  return (\n    <Container className={classes.container}>\n        { show && <Editor text={text} updateText={setText}/>}\n        <Previewer text={text} show={show} toggleShow={toggleShow}/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}